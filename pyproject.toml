[build-system]
requires = ['poetry-core>=1.0.0']
build-backend = 'poetry.core.masonry.api'

[tool.poetry]
name = 'sectionproperties'
version = '1.0.8'
description = 'A python package for the analysis of arbitrary cross-sections using the finite element method.'
authors = [
  'Robbie van Leeuwen <robbie.vanleeuwen@gmail.com>',
]
license = 'MIT'
readme = 'README.rst'
repository = 'https://github.com/robbievanleeuwen/section-properties'
homepage = 'https://github.com/robbievanleeuwen/section-properties'
keywords = ['section', 'cross section', 'fea']
classifiers=[
  'Development Status :: 5 - Production/Stable',
  'Environment :: Console',
  'Intended Audience :: Science/Research',
  'License :: OSI Approved :: MIT License',
  'Programming Language :: Python :: 3 :: Only',
  'Topic :: Scientific/Engineering',
]
include = ['CHANGELOG.rst']

[tool.poetry.dependencies]
python = ">=3.7,<3.10"
numpy = "^1.20.2"
scipy = "^1.6.3"
matplotlib = "^3.4.2"
shapely = "^1.7.1"
pybind11 = "^2.6.2"
MeshPy = "^2020.1"

[tool.poetry.dev-dependencies]
black = "21.5b0"
isort = "^5.8.0"
flake8 = "^3.9.1"
flake8-docstrings = "^1.6.0"
flake8-bugbear = "^21.4.3"
flake8-rst-docstrings = "^0.2.3"
pylint = "^2.8.2"
rstcheck = "^3.3.1"
pytest = "^6.2.4"
pytest-benchmark = "^3.4.1"
coverage = { version = "^5.5", extras = ["toml"] }
pre-commit = "^2.12.1"
twine = "^3.4.1"
Sphinx = "^3.5.4"
sphinx-rtd-theme = "^0.5.2"
sphinx-gallery = "^0.9.0"
sphinx-copybutton = "^0.3.1"
sphinx-notfound-page = "^0.6"
jupyter-sphinx = "^0.3.2"
doc8 = "^0.8.1"

[tool.black]
line-length = 100
skip-string-normalization = true
extend-exclude = '''
(
  /(
      docs/source/sphinx_gallery_examples
    | docs/jupyter_execute
  )/
)
'''

[tool.isort]
profile = 'black'
line_length = 100
lines_after_imports = 2
src_paths = ['src', 'tests', 'examples', 'docs']
extend_skip_glob = '''
*/jupyter_execute/*
'''

[tool.pylint]
[tool.pylint.master]
jobs = 0
extension-pkg-whitelist = 'numpy'

[tool.pylint.format]
max-line-length = 100
expected-line-ending-format = 'LF'
good-names = [
  'i',
  'j',
  'k',
]

[tool.pylint.message_control]
disable = [
  'too-few-public-methods',
  'too-many-public-methods',
  'too-many-arguments',
  'too-many-branches',
  'too-many-instance-attributes',
  'too-many-lines',
  'too-many-locals',
  'too-many-statements',
  'invalid-name',
  'duplicate-code',  # TODO: should remove this after doing a refactor
]

[tool.pylint.reports]
reports = 'no'

[tool.pytest]
[tool.pytest.ini_options]
minversion = '6.2'
cache_dir = '.cache/pytest'
# benchmarks are very slow and so are disable by default; run "pytest --benchmark-enable" to enable
addopts = '''
-x
--strict-markers
--benchmark-disable
--benchmark-storage=.cache/benchmarks
--benchmark-autosave
--benchmark-compare
--benchmark-group-by=name,fullname
'''
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
]
norecursedirs = '''
docs/_build
docs/examples
'''
doctest_optionflags = 'ELLIPSIS NORMALIZE_WHITESPACE IGNORE_EXCEPTION_DETAIL'

[tool.coverage]
[tool.coverage.run]
branch = true
source = ['src/sectionproperties']
data_file = '.cache/coverage'
omit = [
  '.venv/*',
  '*/tests/*',
]

[tool.coverage.paths]
source = [
    'src/sectionproperties/',
    '*/src/sectionproperties/',  # for combining data from different OSes in github actions
]

[tool.coverage.report]
precision = 2
show_missing = true

[tool.coverage.html]
directory = '.cache/htmlcov'
